# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson
'.source.js':
    '[YP] Console log':
        'prefix': 'clog'
        'body': 'console.log(${1:\'${2:Hello where}\'});\n$3'
    '[YP] Angular controller':
        'prefix': 'ancon'
        'body': 'controller(\'$1\', [${3:${4:\'$scope\', }${5:\'$http\', }${6:\'$7\', }}function (${8:${9:$scope}${10:, $http}${11:, \'$12\'}}) {\n\t$13\n}]);\n$14'
    '[YP] Angular module':
        'prefix': 'anmod'
        'body': 'angular.module(\'$1\', []);\n$2'
'.text.html.angular':
    '[YP] gulp inject all':
        'prefix': 'gica'
        'body': '<!-- build:css css/main.css -->\n\t<!-- inject:css -->\n\t<!-- endinject -->\n<!-- endbuild -->\n<!-- build:css css/vendors.css -->\n\t<!-- bower:css -->\n\t<!-- endbower -->\n<!-- endbuild -->\n<!-- build:js js/main.js -->\n\t<!-- inject:js -->\n\t<!-- endinject -->\n<!-- endbuild -->\n<!-- build:js js/vendors.js -->\n\t<!-- bower:js -->\n\t<!-- endbower -->\n<!-- endbuild -->'
